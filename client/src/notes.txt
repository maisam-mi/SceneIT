How to set and get token in localStorage: 
// After login:
localStorage.setItem('token', response.token);

// Later, to use it:
const token = localStorage.getItem('token');





How to use token in requests. 
fetch('http://localhost:3000/api/protected', {
  headers: {
    'Authorization': 'Bearer ' + localStorage.getItem('token')
  }
})
.then(res => res.json())
.then(data => console.log(data));






How to validate it in backend: 
const jwt = require('jsonwebtoken');

function authMiddleware(req, res, next) {
  const authHeader = req.headers.authorization;
  const token = authHeader?.split(' ')[1]; // "Bearer <token>"

  if (!token) return res.status(401).json({ error: 'Token missing' });

  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    req.user = decoded; // contains e.g. username or userId
    next();
  } catch (err) {
    res.status(403).json({ error: 'Invalid token' });
  }
}


And Applying to protected routes
app.get('/api/protected', authMiddleware, (req, res) => {
  res.json({ message: 'You accessed a protected route!', user: req.user });
});

